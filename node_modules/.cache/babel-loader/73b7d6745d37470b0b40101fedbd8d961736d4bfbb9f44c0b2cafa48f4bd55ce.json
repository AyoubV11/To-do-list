{"ast":null,"code":"var _jsxFileName = \"/home/ayoubinho/Web/jour2/liste-dynamique/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport PrintArticle from './Article';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasks = [{\n  title: 'Apprendre React',\n  completed: true,\n  status: 1\n}, {\n  title: 'Créer un projet React',\n  completed: false,\n  status: 1\n}, {\n  title: 'Comprendre les props',\n  completed: true,\n  status: 199\n}, {\n  title: 'Déployer une application React',\n  completed: false,\n  status: 1\n}];\nfunction AddList() {\n  _s();\n  // État pour la liste des tâches\n  const [tasks, setTasks] = useState([{\n    title: 'Apprendre React',\n    completed: true,\n    status: 1\n  }, {\n    title: 'Créer un projet React',\n    completed: false,\n    status: 1\n  }, {\n    title: 'Comprendre les props',\n    completed: true,\n    status: 199\n  }, {\n    title: 'Déployer une application React',\n    completed: false,\n    status: 1\n  }]);\n\n  // État pour les champs d'entrée\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [newTaskCompleted, setNewTaskCompleted] = useState(false);\n\n  // Fonction pour ajouter une nouvelle tâche\n  const addNewTask = () => {\n    if (newTaskTitle.trim() === '') {\n      alert('Le titre de la tâche ne peut pas être vide.');\n      return;\n    }\n    const newTask = {\n      title: newTaskTitle,\n      completed: newTaskCompleted,\n      status: 1\n    };\n    setTasks([...tasks, newTask]); // Ajoute la nouvelle tâche au tableau\n    setNewTaskTitle(''); // Réinitialise le champ titre\n    setNewTaskCompleted(false); // Réinitialise le statut\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ajouter une nouvelle t\\xE2che\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTaskTitle,\n      onChange: e => setNewTaskTitle(e.target.value),\n      placeholder: \"Titre de la t\\xE2che\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: newTaskCompleted,\n        onChange: e => setNewTaskCompleted(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), \"Termin\\xE9e\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewTask,\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(AddList, \"vTtWE1ePQdYQjhoWb9IbiQqIE1A=\");\n_c = AddList;\nfunction Task(props) {\n  const handleComplete = () => {\n    props.onComplete(props.id); // Appelle une fonction depuis le parent pour mettre à jour l'état\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '10px',\n      padding: '10px',\n      border: '1px solid #ccc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Titre : \", props.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status : \", props.completed ? 'Terminée' : 'En cours']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), !props.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleComplete,\n      children: \"Termin\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Task;\nfunction TaskList() {\n  _s2();\n  // État pour les tâches\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: 'Apprendre React',\n    completed: false\n  }, {\n    id: 2,\n    title: 'Créer un projet React',\n    completed: false\n  }, {\n    id: 3,\n    title: 'Comprendre les props',\n    completed: true\n  }]);\n\n  // Fonction pour marquer une tâche comme terminée\n  const markTaskAsCompleted = id => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === id ? {\n      ...task,\n      completed: true\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des t\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), tasks.filter(task => !task.completed) // Filtrer uniquement les tâches \"en cours\"\n    .map(task => /*#__PURE__*/_jsxDEV(Task, {\n      id: task.id,\n      title: task.title,\n      completed: task.completed,\n      onComplete: markTaskAsCompleted\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s2(TaskList, \"TZtsW7LumL+KQPqQq8QH3LfYdrI=\");\n_c3 = TaskList;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des t\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AddList\");\n$RefreshReg$(_c2, \"Task\");\n$RefreshReg$(_c3, \"TaskList\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","PrintArticle","jsxDEV","_jsxDEV","tasks","title","completed","status","AddList","_s","setTasks","newTaskTitle","setNewTaskTitle","newTaskCompleted","setNewTaskCompleted","addNewTask","trim","alert","newTask","children","TaskList","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","checked","onClick","_c","Task","props","handleComplete","onComplete","id","style","margin","padding","border","_c2","_s2","markTaskAsCompleted","prevTasks","map","task","filter","_c3","App","className","_c4","$RefreshReg$"],"sources":["/home/ayoubinho/Web/jour2/liste-dynamique/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport PrintArticle from './Article';\n\n\n\nconst tasks = [\n  { title: 'Apprendre React', completed: true ,status:1},\n  { title: 'Créer un projet React', completed: false ,status:1},\n  { title: 'Comprendre les props', completed: true ,status:199},\n  { title: 'Déployer une application React', completed: false,status:1 }\n];\n\nfunction AddList() {\n  // État pour la liste des tâches\n  const [tasks, setTasks] = useState([\n    { title: 'Apprendre React', completed: true, status: 1 },\n    { title: 'Créer un projet React', completed: false, status: 1 },\n    { title: 'Comprendre les props', completed: true, status: 199 },\n    { title: 'Déployer une application React', completed: false, status: 1 }\n  ]);\n\n  // État pour les champs d'entrée\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [newTaskCompleted, setNewTaskCompleted] = useState(false);\n\n  // Fonction pour ajouter une nouvelle tâche\n  const addNewTask = () => {\n    if (newTaskTitle.trim() === '') {\n      alert('Le titre de la tâche ne peut pas être vide.');\n      return;\n    }\n\n    const newTask = {\n      title: newTaskTitle,\n      completed: newTaskCompleted,\n      status: 1\n    };\n\n    setTasks([...tasks, newTask]); // Ajoute la nouvelle tâche au tableau\n    setNewTaskTitle(''); // Réinitialise le champ titre\n    setNewTaskCompleted(false); // Réinitialise le statut\n  };\n\n  return (\n    <div>\n      <TaskList tasks={tasks} />\n\n      <h3>Ajouter une nouvelle tâche</h3>\n      <input\n        type=\"text\"\n        value={newTaskTitle}\n        onChange={(e) => setNewTaskTitle(e.target.value)}\n        placeholder=\"Titre de la tâche\"\n      />\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={newTaskCompleted}\n          onChange={(e) => setNewTaskCompleted(e.target.checked)}\n        />\n        Terminée\n      </label>\n      <button onClick={addNewTask}>Ajouter</button>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\nfunction Task(props) {\n  const handleComplete = () => {\n    props.onComplete(props.id); // Appelle une fonction depuis le parent pour mettre à jour l'état\n  };\n\n  return (\n    <div style={{ margin: '10px', padding: '10px', border: '1px solid #ccc' }}>\n      <p>Titre : {props.title}</p>\n      <p>Status : {props.completed ? 'Terminée' : 'En cours'}</p>\n      {!props.completed && <button onClick={handleComplete}>Terminé</button>}\n    </div>\n  );\n}\n\nfunction TaskList() {\n  // État pour les tâches\n  const [tasks, setTasks] = useState([\n    { id: 1, title: 'Apprendre React', completed: false },\n    { id: 2, title: 'Créer un projet React', completed: false },\n    { id: 3, title: 'Comprendre les props', completed: true },\n  ]);\n\n  // Fonction pour marquer une tâche comme terminée\n  const markTaskAsCompleted = (id) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === id ? { ...task, completed: true } : task\n      )\n    );\n  };\n\n  return (\n    <div>\n      <h2>Liste des tâches</h2>\n      {tasks\n        .filter((task) => !task.completed) // Filtrer uniquement les tâches \"en cours\"\n        .map((task) => (\n          <Task\n            key={task.id}\n            id={task.id}\n            title={task.title}\n            completed={task.completed}\n            onComplete={markTaskAsCompleted}\n          />\n        ))}\n    </div>\n  );\n}\n\n\n\n\n\n\nfunction App() {\n  \n  \n  return (\n    <div className=\"App\">\n      <h1>Liste des tâches</h1>\n      <AddList />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}