{"ast":null,"code":"var _jsxFileName = \"/home/ayoubinho/Web/jour2/liste-dynamique/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task(props) {\n  // Fonction pour marquer une tâche comme terminée\n  const markTaskAsCompleted = id => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === id ? {\n      ...task,\n      completed: true\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '10px',\n      padding: '10px',\n      border: '1px solid #ccc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Titre : \", props.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status : \", props.completed ? 'Terminée' : 'En cours']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = Task;\nfunction AddList() {\n  _s();\n  // État pour la liste des tâches\n  const [tasks, setTasks] = useState([{\n    title: 'Apprendre React',\n    completed: true,\n    status: 1\n  }, {\n    title: 'Créer un projet React',\n    completed: false,\n    status: 1\n  }, {\n    title: 'Comprendre les props',\n    completed: true,\n    status: 199\n  }, {\n    title: 'Déployer une application React',\n    completed: false,\n    status: 1\n  }]);\n\n  // État pour les champs d'entrée\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [newTaskCompleted, setNewTaskCompleted] = useState(false);\n\n  // Fonction pour ajouter une nouvelle tâche\n  const addNewTask = () => {\n    if (newTaskTitle.trim() === '') {\n      alert('Le titre de la tâche ne peut pas être vide.');\n      return;\n    }\n    const newTask = {\n      title: newTaskTitle,\n      completed: newTaskCompleted,\n      status: 1\n    };\n    setTasks([...tasks, newTask]); // Ajoute la nouvelle tâche au tableau\n    setNewTaskTitle(''); // Réinitialise le champ titre\n    setNewTaskCompleted(false); // Réinitialise le statut\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ajouter une nouvelle t\\xE2che\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTaskTitle,\n      onChange: e => setNewTaskTitle(e.target.value),\n      placeholder: \"Titre de la t\\xE2che\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: newTaskCompleted,\n        onChange: e => setNewTaskCompleted(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \"Termin\\xE9e\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewTask,\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(AddList, \"vTtWE1ePQdYQjhoWb9IbiQqIE1A=\");\n_c2 = AddList;\nfunction TaskList({\n  tasks\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      title: task.title,\n      completed: task.completed\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_c3 = TaskList;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des t\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"AddList\");\n$RefreshReg$(_c3, \"TaskList\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Task","props","markTaskAsCompleted","id","setTasks","prevTasks","map","task","completed","style","margin","padding","border","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","AddList","_s","tasks","status","newTaskTitle","setNewTaskTitle","newTaskCompleted","setNewTaskCompleted","addNewTask","trim","alert","newTask","TaskList","type","value","onChange","e","target","placeholder","checked","onClick","_c2","index","_c3","App","className","_c4","$RefreshReg$"],"sources":["/home/ayoubinho/Web/jour2/liste-dynamique/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nfunction Task(props) {\n  \n   // Fonction pour marquer une tâche comme terminée\n   const markTaskAsCompleted = (id) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === id ? { ...task, completed: true } : task\n      )\n    );\n  };\n  \n  \n  return (\n    <div style={{ margin: '10px', padding: '10px', border: '1px solid #ccc' }}>\n      <p>Titre : {props.title}</p>\n      <p>Status : {props.completed ? 'Terminée' : 'En cours'}</p>\n    </div>\n  );\n}\nfunction AddList() {\n  // État pour la liste des tâches\n  const [tasks, setTasks] = useState([\n    { title: 'Apprendre React', completed: true, status: 1 },\n    { title: 'Créer un projet React', completed: false, status: 1 },\n    { title: 'Comprendre les props', completed: true, status: 199 },\n    { title: 'Déployer une application React', completed: false, status: 1 }\n  ]);\n\n  // État pour les champs d'entrée\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [newTaskCompleted, setNewTaskCompleted] = useState(false);\n\n  // Fonction pour ajouter une nouvelle tâche\n  const addNewTask = () => {\n    if (newTaskTitle.trim() === '') {\n      alert('Le titre de la tâche ne peut pas être vide.');\n      return;\n    }\n\n    const newTask = {\n      title: newTaskTitle,\n      completed: newTaskCompleted,\n      status: 1\n    };\n\n    setTasks([...tasks, newTask]); // Ajoute la nouvelle tâche au tableau\n    setNewTaskTitle(''); // Réinitialise le champ titre\n    setNewTaskCompleted(false); // Réinitialise le statut\n  };\n\n  return (\n    <div>\n      <TaskList tasks={tasks} />\n\n      <h3>Ajouter une nouvelle tâche</h3>\n      <input\n        type=\"text\"\n        value={newTaskTitle}\n        onChange={(e) => setNewTaskTitle(e.target.value)}\n        placeholder=\"Titre de la tâche\"\n      />\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={newTaskCompleted}\n          onChange={(e) => setNewTaskCompleted(e.target.checked)}\n        />\n        Terminée\n      </label>\n      <button onClick={addNewTask}>Ajouter</button>\n    </div>\n  );\n}\n\nfunction TaskList({ tasks }) {\n  return (\n    <div>\n      {tasks.map((task, index) => (\n        <Task key={index} title={task.title} completed={task.completed} />\n      ))}\n    </div>\n  );\n}\n\n\n\n\nfunction App() {\n  \n  \n  return (\n    <div className=\"App\">\n      <h1>Liste des tâches</h1>\n      <AddList />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}